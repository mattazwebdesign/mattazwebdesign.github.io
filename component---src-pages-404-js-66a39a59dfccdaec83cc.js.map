{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_629570140_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","keywords","concat","defaultProps","Header","siteTitle","react_default","Navbar_default","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav_default","className","Link","gatsby_browser_entry","to","style","color","textDecoration","activeStyle","Footer","textAlign","backgroundColor","padding","fontSize","Date","getFullYear","Layout","children","_856328897","Fragment","header","margin","paddingTop","footer"],"mappings":"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","file":"component---src-pages-404-js-66a39a59dfccdaec83cc.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n            keywords\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `keywords`,\r\n          content: site.siteMetadata.keywords,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"https://mattaz.com\">{siteTitle}</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n      <Nav className=\"mr-auto\"></Nav>\r\n      <Nav>\r\n        <Nav.Link>\r\n          <Link\r\n            to=\"/\"\r\n            style={{ color: `#fff`, textDecoration: `none` }}\r\n            activeStyle={{ color: \"#007bff\" }}\r\n          >\r\n            Home\r\n          </Link>\r\n        </Nav.Link>\r\n        <Nav.Link>\r\n          <Link\r\n            to=\"/devtabs/\"\r\n            style={{ color: `#fff`, textDecoration: `none` }}\r\n            activeStyle={{ color: \"#007bff\" }}\r\n          >\r\n            Dev Tabs\r\n          </Link>\r\n        </Nav.Link>\r\n        <Nav.Link>\r\n          <Link\r\n            to=\"/blog/\"\r\n            style={{ color: `#fff`, textDecoration: `none` }}\r\n            activeStyle={{ color: \"#007bff\" }}\r\n          >\r\n            Blog\r\n          </Link>\r\n        </Nav.Link>\r\n        <Nav.Link>\r\n          <Link\r\n            to=\"/contact/\"\r\n            style={{ color: `#fff`, textDecoration: `none` }}\r\n            activeStyle={{ color: \"#007bff\" }}\r\n          >\r\n            Contact\r\n          </Link>\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\nimport \"./layout.css\"\n\nfunction Footer() {\n  return (\n    <footer\n      style={{\n        textAlign: `center`,\n        backgroundColor: `#333`,\n        color: `#e2e2e2`,\n        padding: `.9rem`,\n        fontSize: `.75rem`,\n      }}\n    >\n      © {new Date().getFullYear()}, Built with\n      {` `}\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a>, By:{\" \"}\n      <a href=\"https://mattaz.com\">Mattaz Web Design</a>\n    </footer>\n  )\n}\nexport default Footer\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}